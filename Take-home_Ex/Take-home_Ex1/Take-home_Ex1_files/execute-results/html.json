{
  "hash": "acdc59fa2a6a20f746f956d840572292",
  "result": {
    "markdown": "---\ntitle: \"Take-home Exercise 1: Geospatial Analytics for Public Good\"\nauthor: \"Cai Jingheng\"\ndate: \"30 Nov 2023\"\ndate-modified: \"last-modified\"\nformat: \n  html:\n    code-fold: true\n    code-control: true\n    warning: false\neditor: visual\n---\n\n\n## **1 Background**\n\nAs city-wide urban infrastructures such as buses, taxis, mass rapid transit, public utilities and roads become digital, the datasets obtained can be used as a framework for tracking movement patterns through space and time. This is particularly true with the recent trend of massive deployment of pervasive computing technologies such as GPS and RFID on the vehicles. For example, routes and ridership data were collected with the use of smart cards and Global Positioning System (GPS) devices available on the public buses. These massive movement data collected are likely to contain structure and patterns that provide useful information about characteristics of the measured phenomena. The identification, analysis and comparison of such patterns will provide greater insights on human movement and behaviours within a city. These understandings will potentially contribute to a better urban management and useful information for urban transport services providers both from the private and public sector to formulate informed decision to gain competitive advantage.\n\nIn real-world practices, the use of these massive locational aware data, however, tend to be confined to simple tracking and mapping with GIS applications. This is mainly due to a general lack of functions in conventional GIS which is capable of analysing and model spatial and spatio-temporal data effectively.\n\n## 2 **Objectives**\n\nExploratory Spatial Data Analysis (ESDA) hold tremendous potential to address complex problems facing society. In this study, you are tasked to apply appropriate Local Indicators of Spatial Association (GLISA) and Emerging Hot Spot Analysis (EHSA) to undercover the spatial and spatio-temporal mobility patterns of public bus passengers in Singapore.\n\n## **3 Getting Started**\n\n### **3.1 Packages**\n\nFor the purpose of this exercise, four r packages will be used. They are:\n\n-   sf for importing, integrating, processing and transforming geospatial data.\n\n-   tidyverse for importing, integrating, wrangling and visualising data.\n\n-   tmap for creating thematic maps.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tmap, sf, DT, stplanr,\n               performance,sfdep,\n               ggpubr, tidyverse)\n```\n:::\n\n\n### **3.2 Data Acquisition and Extraction**\n\n#### **Apstial data**\n\nFor the purpose of this take-home exercise, *Passenger Volume by Origin Destination Bus Stops* downloaded from [LTA DataMall](https://datamall.lta.gov.sg/content/datamall/en.html) will be used.\n\n#### **Geospatial data**\n\nTwo geospatial data will be used in this study, they are:\n\n-   *Bus Stop Location* from LTA DataMall. It provides information about all the bus stops currently being serviced by buses, including the bus stop code (identifier) and location coordinates.\n\n-   *hexagon*, a [hexagon](https://desktop.arcgis.com/en/arcmap/latest/tools/spatial-statistics-toolbox/h-whyhexagons.htm) layer of 250m (this distance is the perpendicular distance between the centre of the hexagon and its edges.) should be used to replace the relative coarse and irregular Master Plan 2019 Planning Sub-zone GIS data set of URA.\n\n## **4 Data Preparation**\n\n### **4.1 Importing Geospatial Data into R**\n\nTwo geospatial data will be used in this exercise, they are:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbusstop <- st_read(dsn = \"data/geospatial\",\n                   layer = \"BusStop\") \n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `BusStop' from data source \n  `C:\\cjh202311\\isss624\\Take-home_Ex\\Take-home_Ex1\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n```\n:::\n\n```{.r .cell-code}\nmpsz <- st_read(dsn = \"data/geospatial\",\n                   layer = \"MPSZ-2019\") \n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `MPSZ-2019' from data source \n  `C:\\cjh202311\\isss624\\Take-home_Ex\\Take-home_Ex1\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n:::\n:::\n\n\n### **4.2 Importing the OD data**\n\nFirstly, we will import the *Passenger Volume by Origin Destination Bus Stops* data set downloaded from LTA DataMall by using `read_csv()` of **readr**package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nodbus <- read_csv(\"data/aspatial/origin_destination_bus_202308.csv\")\n\n# bus09 <- read_csv(\"data/aspatial/origin_destination_bus_202309.csv\")\n# bus10 <- read_csv(\"data/aspatial/origin_destination_bus_202310.csv\")\n```\n:::\n\n\nA quick check of odbus tibble data frame shows that the values in OROGIN_PT_CODE and DESTINATON_PT_CODE are in numeric data type.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(odbus)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 5,709,512\nColumns: 7\n$ YEAR_MONTH          <chr> \"2023-08\", \"2023-08\", \"2023-08\", \"2023-08\", \"2023-…\n$ DAY_TYPE            <chr> \"WEEKDAY\", \"WEEKENDS/HOLIDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       <dbl> 16, 16, 14, 14, 17, 17, 17, 17, 7, 17, 14, 10, 10,…\n$ PT_TYPE             <chr> \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      <chr> \"04168\", \"04168\", \"80119\", \"80119\", \"44069\", \"4406…\n$ DESTINATION_PT_CODE <chr> \"10051\", \"10051\", \"90079\", \"90079\", \"17229\", \"1722…\n$ TOTAL_TRIPS         <dbl> 7, 2, 3, 10, 5, 4, 3, 22, 3, 3, 7, 1, 3, 1, 3, 1, …\n```\n:::\n:::\n\n\nUsing appropriate tidyverse functions to convert these data values into factor data type.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nodbus$ORIGIN_PT_CODE <- as.factor(odbus$ORIGIN_PT_CODE)\nodbus$DESTINATION_PT_CODE <- as.factor(odbus$DESTINATION_PT_CODE) \n```\n:::\n\n\nNotice that both of them are in factor data type now.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(odbus)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 5,709,512\nColumns: 7\n$ YEAR_MONTH          <chr> \"2023-08\", \"2023-08\", \"2023-08\", \"2023-08\", \"2023-…\n$ DAY_TYPE            <chr> \"WEEKDAY\", \"WEEKENDS/HOLIDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       <dbl> 16, 16, 14, 14, 17, 17, 17, 17, 7, 17, 14, 10, 10,…\n$ PT_TYPE             <chr> \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      <fct> 04168, 04168, 80119, 80119, 44069, 44069, 20281, 2…\n$ DESTINATION_PT_CODE <fct> 10051, 10051, 90079, 90079, 17229, 17229, 20141, 2…\n$ TOTAL_TRIPS         <dbl> 7, 2, 3, 10, 5, 4, 3, 22, 3, 3, 7, 1, 3, 1, 3, 1, …\n```\n:::\n:::\n\n\n## **5 Geovisualisation and Analysis**\n\nThe ability to visualize areas with high commuting traffic and to uncover daily commuting patterns is greatly enhanced by geospatial analysis methods. This is essential for effective urban traffic management and for reducing congestion during peak commute times, by providing insights into the distribution of passenger volumes throughout the day.\n\n### **5.1 Extracting the study data**\n\nFor the purpose of this exercise, we will extract commuting flows as shown in the table below:\n\n| Peak hour period             | Bus tap on time | Output tibble data table |\n|------------------------------|-----------------|--------------------------|\n| Weekday morning peak         | 6am to 9am      | `origin6_9`              |\n| Weekday afternoon peak       | 5pm to 8pm      | `origin17_20`            |\n| Weekend/holiday morning peak | 11am to 2pm     | `origin11_14`            |\n| Weekend/holiday evening peak | 4pm to 7pm      | `origin16_19`            |\n\n::: panel-tabset\n#### Weekday morning peak\n\n\n::: {.cell}\n\n```{.r .cell-code}\norigin6_9 <- odbus %>%\n  filter(DAY_TYPE == \"WEEKDAY\") %>%\n  filter(TIME_PER_HOUR >= 6 &\n           TIME_PER_HOUR <= 9) %>%\n  group_by(ORIGIN_PT_CODE) %>%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n```\n:::\n\n\nWe will save the output in rds format for future used.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(origin6_9, \"data/rds/origin6_9.rds\")\n```\n:::\n\n\nThe code chunk below will be used to import the save origin6_9.rds into R environment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\norigin6_9 <- read_rds(\"data/rds/origin6_9.rds\")\n```\n:::\n\n\n#### Weekday afternoon peak\n\n\n::: {.cell}\n\n```{.r .cell-code}\norigin17_20 <- odbus %>%\n  filter(DAY_TYPE == \"WEEKDAY\") %>%\n  filter(TIME_PER_HOUR >= 17 &\n           TIME_PER_HOUR <= 20) %>%\n  group_by(ORIGIN_PT_CODE) %>%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n```\n:::\n\n\nWe will save the output in rds format for future used.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(origin17_20, \"data/rds/origin17_20.rds\")\n```\n:::\n\n\nThe code chunk below will be used to import the save origin617_20.rds into R environment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\norigin17_20 <- read_rds(\"data/rds/origin17_20.rds\")\n```\n:::\n\n\n#### Weekend/holiday morning peak\n\n\n::: {.cell}\n\n```{.r .cell-code}\norigin11_14 <- odbus %>%\n  filter(DAY_TYPE == \"WEEKENDS/HOLIDAY\") %>%\n  filter(TIME_PER_HOUR >= 11 &\n           TIME_PER_HOUR <= 14) %>%\n  group_by(ORIGIN_PT_CODE) %>%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n```\n:::\n\n\nWe will save the output in rds format for future used.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(origin11_14, \"data/rds/origin11_14.rds\")\n```\n:::\n\n\nThe code chunk below will be used to import the save origin617_20.rds into R environment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\norigin11_14 <- read_rds(\"data/rds/origin11_14.rds\")\n```\n:::\n\n\n#### Weekend/holiday evening peak\n\n\n::: {.cell}\n\n```{.r .cell-code}\norigin16_19 <- odbus %>%\n  filter(DAY_TYPE == \"WEEKENDS/HOLIDAY\") %>%\n  filter(TIME_PER_HOUR >= 16 &\n           TIME_PER_HOUR <= 19) %>%\n  group_by(ORIGIN_PT_CODE) %>%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n```\n:::\n\n\nWe will save the output in rds format for future used.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(origin16_19, \"data/rds/origin16_19.rds\")\n```\n:::\n\n\nThe code chunk below will be used to import the save origin617_20.rds into R environment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\norigin16_19 <- read_rds(\"data/rds/origin16_19.rds\")\n```\n:::\n\n:::\n\n### 5.2 Create **Hexagon grid (honeycomb)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\narea_honeycomb_grid = st_make_grid(busstop,cellsize = 500, what = \"polygons\", square = FALSE)\n\nhoneycomb_grid_sf = st_sf(area_honeycomb_grid) %>%\n\nmutate(grid_id = 1:length(lengths(area_honeycomb_grid)))\n```\n:::\n\n\n### 5.3 **Geospatial data wrangling**\n\n#### **5.3.1 Combining Busstop and Hexagon grid**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhoneycomb_grid <- st_intersection(busstop, honeycomb_grid_sf) %>%\n  select(BUS_STOP_N, grid_id) %>%\n  st_drop_geometry()\n```\n:::\n\n\n::: panel-tabset\n#### Weekday morning peak\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBUS_WDMP <- left_join(origin6_9 , honeycomb_grid,\n            by = c(\"ORIGIN_PT_CODE\" = \"BUS_STOP_N\")) %>%\n  rename(ORIGIN_BS = ORIGIN_PT_CODE,\n         ORIGIN_SZ = grid_id) %>%\n  group_by(ORIGIN_SZ) %>%\n  summarise(TOT_TRIPS = sum(TRIPS))\n```\n:::\n\n\nBefore continue, it is a good practice for us to check for duplicating records.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nduplicate <- BUS_WDMP %>%\n  group_by_all() %>%\n  filter(n()>1) %>%\n  ungroup()\n```\n:::\n\n\nIf duplicated records are found, the code chunk below will be used to retain the unique records.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBUS_WDMP <- unique(BUS_WDMP)\n```\n:::\n\n\nIt will be a good practice to confirm if the duplicating records issue has been addressed fully.\n\n\n::: {.cell}\n\n```{.r .cell-code}\norigintrip_WDMP <- left_join(honeycomb_grid_sf, \n                           BUS_WDMP,\n                           by = c(\"grid_id\" = \"ORIGIN_SZ\"))\n```\n:::\n\n\nRemove grid without value of 0\n\n\n::: {.cell}\n\n```{.r .cell-code}\norigintrip_WDMP = filter(origintrip_WDMP, TOT_TRIPS > 0)\n```\n:::\n\n\n#### Weekday afternoon peak\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBUS_WDAP <- left_join(origin17_20 , honeycomb_grid,\n            by = c(\"ORIGIN_PT_CODE\" = \"BUS_STOP_N\")) %>%\n  rename(ORIGIN_BS = ORIGIN_PT_CODE,\n         ORIGIN_SZ = grid_id) %>%\n  group_by(ORIGIN_SZ) %>%\n  summarise(TOT_TRIPS = sum(TRIPS))\n```\n:::\n\n\nBefore continue, it is a good practice for us to check for duplicating records.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nduplicate <- BUS_WDAP %>%\n  group_by_all() %>%\n  filter(n()>1) %>%\n  ungroup()\n```\n:::\n\n\nIf duplicated records are found, the code chunk below will be used to retain the unique records.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBUS_WDAP <- unique(BUS_WDAP)\n```\n:::\n\n\nIt will be a good practice to confirm if the duplicating records issue has been addressed fully.\n\n\n::: {.cell}\n\n```{.r .cell-code}\norigintrip_WDAP <- left_join(honeycomb_grid_sf, \n                           BUS_WDAP,\n                           by = c(\"grid_id\" = \"ORIGIN_SZ\"))\n```\n:::\n\n\nRemove grid without value of 0\n\n\n::: {.cell}\n\n```{.r .cell-code}\norigintrip_WDAP = filter(origintrip_WDAP, TOT_TRIPS > 0)\n```\n:::\n\n\n#### Weekend/holiday morning peak\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBUS_WKMP <- left_join(origin11_14 , honeycomb_grid,\n            by = c(\"ORIGIN_PT_CODE\" = \"BUS_STOP_N\")) %>%\n  rename(ORIGIN_BS = ORIGIN_PT_CODE,\n         ORIGIN_SZ = grid_id) %>%\n  group_by(ORIGIN_SZ) %>%\n  summarise(TOT_TRIPS = sum(TRIPS))\n```\n:::\n\n\nBefore continue, it is a good practice for us to check for duplicating records.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nduplicate <- BUS_WKMP %>%\n  group_by_all() %>%\n  filter(n()>1) %>%\n  ungroup()\n```\n:::\n\n\nIf duplicated records are found, the code chunk below will be used to retain the unique records.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBUS_WKMP <- unique(BUS_WKMP)\n```\n:::\n\n\nIt will be a good practice to confirm if the duplicating records issue has been addressed fully.\n\n\n::: {.cell}\n\n```{.r .cell-code}\norigintrip_WKMP <- left_join(honeycomb_grid_sf, \n                           BUS_WKMP,\n                           by = c(\"grid_id\" = \"ORIGIN_SZ\"))\n```\n:::\n\n\nRemove grid without value of 0\n\n\n::: {.cell}\n\n```{.r .cell-code}\norigintrip_WKMP = filter(origintrip_WKMP, TOT_TRIPS > 0)\n```\n:::\n\n\n#### Weekend/holiday evening peak\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBUS_WKEP <- left_join(origin16_19 , honeycomb_grid,\n            by = c(\"ORIGIN_PT_CODE\" = \"BUS_STOP_N\")) %>%\n  rename(ORIGIN_BS = ORIGIN_PT_CODE,\n         ORIGIN_SZ = grid_id) %>%\n  group_by(ORIGIN_SZ) %>%\n  summarise(TOT_TRIPS = sum(TRIPS))\n```\n:::\n\n\nBefore continue, it is a good practice for us to check for duplicating records.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nduplicate <- BUS_WKEP %>%\n  group_by_all() %>%\n  filter(n()>1) %>%\n  ungroup()\n```\n:::\n\n\nIf duplicated records are found, the code chunk below will be used to retain the unique records.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBUS_WKEP <- unique(BUS_WKEP)\n```\n:::\n\n\nIt will be a good practice to confirm if the duplicating records issue has been addressed fully.\n\n\n::: {.cell}\n\n```{.r .cell-code}\norigintrip_WKEP <- left_join(honeycomb_grid_sf, \n                           BUS_WKEP,\n                           by = c(\"grid_id\" = \"ORIGIN_SZ\"))\n```\n:::\n\n\nRemove grid without value of 0\n\n\n::: {.cell}\n\n```{.r .cell-code}\norigintrip_WKEP = filter(origintrip_WKEP, TOT_TRIPS > 0)\n```\n:::\n\n:::\n\n### **5.4 Creating interactive map**\n\n::: panel-tabset\n#### Weekday morning peak\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\ntmap_options(check.and.fix = TRUE)\ntm_shape(origintrip_WDMP)+\n  tm_fill(\"TOT_TRIPS\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Total trips\") +   \n  tm_layout(\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-41-1.png){width=672}\n:::\n:::\n\n\n#### Weekday afternoon peak\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\ntmap_options(check.and.fix = TRUE)\ntm_shape(origintrip_WDAP)+\n  tm_fill(\"TOT_TRIPS\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Total trips\") +   \n  tm_layout(\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-42-1.png){width=672}\n:::\n:::\n\n\n#### Weekend/holiday morning peak\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\ntmap_options(check.and.fix = TRUE)\ntm_shape(origintrip_WKMP)+\n  tm_fill(\"TOT_TRIPS\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Total trips\") +   \n  tm_layout(\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-43-1.png){width=672}\n:::\n:::\n\n\n#### Weekend/holiday evening peak\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\ntmap_options(check.and.fix = TRUE)\ntm_shape(origintrip_WKEP)+\n  tm_fill(\"TOT_TRIPS\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Total trips\") +   \n  tm_layout(\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-44-1.png){width=672}\n:::\n:::\n\n:::\n\nLooking at the four maps, different legend values result in different interpretations of passenger traffic density. This inconsistency can cause confusion when comparing data across maps, as each map uses a unique scale to represent trips, making it difficult to make direct comparisons or identify trends.\n\n### **5.5** Uniform Legend values\n\nTherefore, the use of uniform legend values across all maps allows for more direct and accurate comparisons and provides a clearer understanding of the spatial distribution of passenger travel densities and how they change over time or under different conditions.\n\n#### **Weekday morning peak**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\ntmap_options(check.and.fix = TRUE)\n\nbreaks = c(0, 500, 1500, 3000, 10000, 25000, Inf)\n\ntm_shape(mpsz) +\n  tm_polygons()+\ntm_shape(origintrip_WDMP) +\n  tm_fill(\"TOT_TRIPS\", \n          style = \"fixed\",\n          breaks = breaks,\n          palette = \"Blues\",\n          title = \"Total trips\") +\n  tm_layout(main.title = \"Weekday morning peak Traffic\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-45-1.png){width=672}\n:::\n:::\n\n\n#### **Weekday afternoon peak**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\ntmap_options(check.and.fix = TRUE)\n\n# Define custom breaks for the legend\nbreaks = c(0, 500, 1500, 3000, 10000, 25000, Inf)\ntm_shape(mpsz) +\n  tm_polygons()+\ntm_shape(origintrip_WDAP) +\n  tm_fill(\"TOT_TRIPS\", \n          style = \"fixed\",  \n          breaks = breaks,  \n          palette = \"Blues\",\n          title = \"Total trips\") +\n  tm_layout(main.title = \"Weekday afternoon peak Traffic\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-46-1.png){width=672}\n:::\n:::\n\n\n#### **Weekend/holiday morning peak**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\ntmap_options(check.and.fix = TRUE)\n\n# Define custom breaks for the legend\nbreaks = c(0, 500, 1500, 3000, 10000, 25000, Inf)\n\n\ntm_shape(mpsz) +\n  tm_polygons()+\ntm_shape(origintrip_WKMP) +\n    tm_fill(\"TOT_TRIPS\", \n            style = \"fixed\",  # Change style to 'fixed' to use custom breaks\n          breaks = breaks,  # Apply the custom breaks\n          palette = \"Blues\",\n          title = \"Total trips\") +\n  tm_layout(main.title = \"Weekend/holiday morning peak Traffic\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-47-1.png){width=672}\n:::\n:::\n\n\n#### **Weekend/holiday evening peak**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\ntmap_options(check.and.fix = TRUE)\n\n# Define custom breaks for the legend\nbreaks = c(0, 500, 1500, 3000, 10000, 25000, Inf)\n\n\ntm_shape(mpsz) +\n  tm_polygons()+\ntm_shape(origintrip_WKEP) +\n  tm_fill(\"TOT_TRIPS\", \n          style = \"fixed\",  # Change style to 'fixed' to use custom breaks\n          breaks = breaks,  # Apply the custom breaks\n          palette = \"Blues\",\n          title = \"Total trips\") +\n  tm_layout(main.title = \"Weekend/holiday morning peak Traffic\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-48-1.png){width=672}\n:::\n:::\n\n\n### 5.6 Geovisualisation Analysis\n\n#### **Weekdays Comparison (Morning vs. Afternoon Peak)**\n\n-   During the weekday morning peak, there is a notable concentration of passenger trips in the central and southern parts of Singapore, which aligns with the morning commute to CBD and other work-related destinations.\n\n-   In the weekday afternoon peak, while there's still a significant amount of trips in the central region, the spread appears wider, suggesting that people are leaving the CBD, potentially heading to residential areas or other non-work-related destinations as the workday ends.\n\n#### **Weekend Comparison (Morning vs. Evening Peak)**\n\n-   On weekends and holidays, the morning peak shows a more dispersed pattern of trips and possibly related to leisure activities or errands that do not concentrate heavily in the CBD.\n\n-   The evening peak on weekends/holidays shows increased activity compared to the morning. This increase may be attributed to social outings, dining, and entertainment activities that are typical for weekend evenings.\n\n#### **Weekday vs. Weekend/Holiday Comparison**\n\n-   When comparing the weekday peaks to the weekend/holiday peaks, it's clear that the weekday peaks show a greater intensity of trips, especially in the morning. This difference underscores the regular workday commute patterns.\n\n-   The weekend/holiday maps reflect a broader distribution of trips across Singapore, indicating a shift in travel destinations and possibly a more varied purpose behind the trips, such as recreation, personal errands, or tourism activities.\n\n## **6 Local Indicators of Spatial Association (LISA) Analysis**\n\nTo discern any trends of spatial clustering, a local Moran's I test was conducted, identifying whether high-traffic clusters or outlier regions exist within the overall spatial distribution. By calculating the LISA (Local Indicators of Spatial Association) statistics for each observation, we can indicate the extent of significant spatial clustering of similar values around a given observation. This approach aids in pinpointing areas with higher passenger volumes during peak periods.\n\n### **6.1 Deriving contiguity weights: Queen's method**\n\nIn the code chunk below, queen method is used to derive the contiguity weights.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Weekday morning peak\nwm_WDMP <- origintrip_WDMP %>% \n  mutate(nb = st_knn(area_honeycomb_grid,\n                     k=8),\n         wt = st_weights(nb),\n               .before = 1)\n#Weekday afternoon peak\nwm_WDAP <- origintrip_WDAP %>% \n  mutate(nb = st_knn(area_honeycomb_grid,\n                     k=8),\n         wt = st_weights(nb),\n               .before = 1)\n#Weekend/holiday morning peak\nwm_WKMP <- origintrip_WKMP %>% \n  mutate(nb = st_knn(area_honeycomb_grid,\n                     k=8),\n         wt = st_weights(nb),\n               .before = 1)\n\n#Weekend/holiday evening peak\nwm_WKEP <- origintrip_WKEP %>% \n  mutate(nb = st_knn(area_honeycomb_grid,\n                     k=8),\n         wt = st_weights(nb),\n               .before = 1)\n```\n:::\n\n\n### **6.2 Computing Global Moran' I**\n\nIn the code chunk below, global_moran() function is used to compute the Moran's I value. Different from spdep package, the output is a tibble data.frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Weekday morning peak\nlisa_WDMP <- wm_WDMP %>% \n  mutate(local_moran = local_moran(\n    TOT_TRIPS, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_moran)\n\n#Weekday afternoon peak\nlisa_WDAP <- wm_WDAP %>% \n  mutate(local_moran = local_moran(\n    TOT_TRIPS, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_moran)\n\n#Weekend/holiday morning peak\nlisa_WKMP <- wm_WKMP %>% \n  mutate(local_moran = local_moran(\n    TOT_TRIPS, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_moran)\n\n#Weekend/holiday evening peak\nlisa_WKEP <- wm_WKEP %>% \n  mutate(local_moran = local_moran(\n    TOT_TRIPS, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n\n### **6.3 Visualising local Moran's I and p-value**\n\n::: panel.callout\n**Weekday Peak**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n#morning\nmap_WDMP1 <- tm_shape(lisa_WDMP) +\n  tm_fill(\"ii\", palette = \"BuPu\") + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"local Moran's I of Weekday morning peak\",\n            main.title.size = 0.8,\n            main.title.position = \"center\",\n            legend.position = c(\"left\", \"top\"),\n            legend.height = .6,\n            legend.width = .2,\n            frame = FALSE)\n\nmap_WDMP2 <- tm_shape(lisa_WDMP) +\n  tm_fill(\"p_ii_sim\", palette = \"-OrRd\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8,\n            main.title.position = \"center\",\n            legend.position = c(\"right\", \"top\"),\n            legend.height = .5,\n            legend.width = .2,\n            frame = FALSE)\n\n#afternoon\nmap_WDAP1 <- tm_shape(lisa_WDAP) +\n  tm_fill(\"ii\", palette = \"BuPu\") + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"local Moran's I of Weekday afternoon peak\",\n             main.title.size = 0.8,\n            main.title.position = \"center\",\n            legend.position = c(\"left\", \"top\"),\n            legend.height = .6,\n            legend.width = .2,\n            frame = FALSE)\n\nmap_WDAP2 <- tm_shape(lisa_WDAP) +\n  tm_fill(\"p_ii_sim\", palette = \"-OrRd\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8,\n            main.title.position = \"center\",\n            legend.position = c(\"right\", \"top\"),\n            legend.height = .5,\n            legend.width = .2,\n            frame = FALSE)\n\ntmap_arrange(map_WDMP1, map_WDMP2,map_WDAP1, map_WDAP2, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-51-1.png){width=672}\n:::\n:::\n\n\n**Weekend / Holiday Peak**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n#morning\nmap_WKMP1 <- tm_shape(lisa_WKMP) +\n  tm_fill(\"ii\", palette = \"BuPu\") + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"local Moran's I of Weekday morning peak\",\n            main.title.size = 0.8,\n            main.title.position = \"center\",\n            legend.position = c(\"left\", \"top\"),\n            legend.height = .6,\n            legend.width = .2,\n            frame = FALSE)\n\nmap_WKMP2 <- tm_shape(lisa_WKMP) +\n  tm_fill(\"p_ii_sim\", palette = \"-OrRd\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8,\n            main.title.position = \"center\",\n            legend.position = c(\"right\", \"top\"),\n            legend.height = .5,\n            legend.width = .2,\n            frame = FALSE)\n\n#evening\nmap_WKEP1 <- tm_shape(lisa_WKEP) +\n  tm_fill(\"ii\", palette = \"BuPu\") + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"local Moran's I of Weekday afternoon peak\",\n             main.title.size = 0.8,\n            main.title.position = \"center\",\n            legend.position = c(\"left\", \"top\"),\n            legend.height = .6,\n            legend.width = .2,\n            frame = FALSE)\n\nmap_WKEP2 <- tm_shape(lisa_WKEP) +\n  tm_fill(\"p_ii_sim\", palette = \"-OrRd\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8,\n            main.title.position = \"center\",\n            legend.position = c(\"right\", \"top\"),\n            legend.height = .5,\n            legend.width = .2,\n            frame = FALSE)\n\ntmap_arrange(map_WKMP1, map_WKMP2,map_WKEP1, map_WKEP2, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-52-1.png){width=672}\n:::\n:::\n\n:::\n\nDuring weekday morning peaks, noticeable clusters with high local Moran's I values suggest areas with dense traffic. The weekday afternoon peaks display fewer clusters, indicating less traffic concentration. The clusters on weekends and public holidays seem similar in both morning and evening peaks, with no significant difference in the number of clusters, suggesting a consistent spread of traffic throughout these days.\n\n### **6.4 Visualising LISA map**\n\nLISA map is a categorical map showing outliers and clusters. There are two types of outliers namely: High-Low and Low-High outliers. Likewise, there are two type of clusters namely: High-High and Low-Low cluaters. In fact, LISA map is an interpreted map by combining local Moran's I of geographical areas and their respective p-values.\n\nIn lisa sf data.frame, we can find three fields contain the LISA categories. They are mean, median and pysal. In general, classification in mean will be used as shown in the code chunk below.\n\n#### **Weekday morning peak**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolors <- c(\"#4d5887\", \"yellow\", \"orange\", \"salmon\")\nlisa_sig_WDMP <- lisa_WDMP  %>%\n  filter(p_ii_sim < 0.05)\ntmap_mode(\"plot\")\n\ntm_shape(mpsz) +\n  tm_polygons()+\ntm_shape(lisa_WDMP) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig_WDMP) +\n  tm_fill(\"mean\",\n    palette = colors) + \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-53-1.png){width=672}\n:::\n:::\n\n\n#### **Weekday afternoon peak**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolors <- c(\"#4d5887\", \"yellow\", \"orange\", \"salmon\")\nlisa_sig_WDAP <- lisa_WDAP  %>%\n  filter(p_ii_sim < 0.05)\ntmap_mode(\"plot\")\n\ntm_shape(mpsz) +\n  tm_polygons()+\ntm_shape(lisa_WDAP) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig_WDAP) +\n  tm_fill(\"mean\",\n    palette = colors) + \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-54-1.png){width=672}\n:::\n:::\n\n\n#### **Weekend/holiday morning peak**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolors <- c(\"#4d5887\", \"yellow\", \"orange\", \"salmon\") \nlisa_sig_WKMP <- lisa_WKMP  %>%   \n  filter(p_ii_sim < 0.05) \ntmap_mode(\"plot\") \n\ntm_shape(mpsz) +\n  tm_polygons()+\ntm_shape(lisa_WKMP) +   \n  tm_polygons() +   \n  tm_borders(alpha = 0.5) + \n  tm_shape(lisa_sig_WKMP) +   \n  tm_fill(\"mean\",     \n          palette = colors) +    \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-55-1.png){width=672}\n:::\n:::\n\n\n#### **Weekend/holiday evening peak**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolors <- c(\"#4d5887\", \"yellow\", \"orange\", \"salmon\") \nlisa_sig_WDAP <- lisa_WDAP  %>%   \n  filter(p_ii_sim < 0.05) \ntmap_mode(\"plot\") \n\ntm_shape(mpsz) +\n  tm_polygons()+\ntm_shape(lisa_WDAP) +   \n  tm_polygons() +   \n  tm_borders(alpha = 0.5) + \n  tm_shape(lisa_sig_WDAP) +   \n  tm_fill(\"mean\",     \n          palette = colors) +    \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-56-1.png){width=672}\n:::\n:::\n\n\n### 6.5 Conclusion\n\n#### **Weekday Peaks**\n\nDuring both morning and afternoon peaks, High-High clusters are predominantly in the southern region around the CBD. This suggests that the CBD has a consistent high volume of traffic during weekdays. Low-High outliers are dispersed, indicating isolated areas of high traffic adjacent to lower traffic areas.\n\n#### **Weekend/Holiday Peaks**\n\nThere is less distinction between High-High and Low-Low clusters on weekends/holidays, indicating a more homogeneous spread of traffic. The presence of High-Low and Low-High outliers across the island on weekends/holidays suggests that there are both areas of unexpectedly high traffic (potentially leisure destinations) and unexpectedly low traffic surrounded by higher traffic areas.\n",
    "supporting": [
      "Take-home_Ex1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}